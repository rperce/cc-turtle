t = turtle
local loop_limit = 32
function clearDown()
    for i = 1, loop_limit do
        if not(t.detectDown()) then return true end
        if not(t.digDown()) then
            t.attackDown()
        end
    end
    return false
end

function dropoff()
    clearDown()
    t.select(15) t.placeDown()
    for i=1, 14 do t.select(i) t.dropDown() end

    t.digDown()
end

function refuel()
    clearDown()
    t.select(16) t.placeDown()
    t.suckDown() t.refuel()
    t.digDown()
end

function go(args)
    stop = args[1] or 1
    for i=1, stop do
        for i=1, loop_limit do
            if t.forward() then break end
            if not(t.dig()) then
                t.attack()
            end
        end
        if args[2] then args[2]() end
    end
    return false
end

function next_free()
    for i=1, 16 do
        if t.getItemCount(i) < 1 then
            return i
        end
    end
    return 17
end

function cgo(inp)
    args = inp or {}
    n = args[1] or 1
    if next_free() > 13 then
        dropoff()
    end
    if t.getFuelLevel() < 1 then
        refuel()
    end
    go{n, args[2]}
end

function r(i) n = i or 1 for j=1, n do t.turnRight() end end
function l(i) n = i or 1 for j=1, n do t.turnLeft() end end

function start_message()
    print("This turtle will not")
    print("function without a coal")
    print("chest in slot 16 and an")
    print("item chest in slot 15.")
end

